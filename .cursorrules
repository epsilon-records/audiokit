<ai_instruction>
<!--ai-ignore
.cursorrules: Automated AI Post-Interaction Tasks
Version: 1.0.0
Last updated: 2024-10-XX
Author: AudioKit AI Assistant
Purpose: Automate post-interaction updates and version control steps.
ai-ignore-->

1. **Append to CHANGELOG.txt:**  
   Append a brief, human-readable summary of what was done in the current interaction for the current version.
   Make sure to update the changelog version in progress.
   Whenever a version bump occurs, update CHANGELOG.txt accordingly.

2. **Update TODO.txt:**  
   Add any new ideas in structured data format (e.g., a JSON object with fields for `priority`, `description`, and `timestamp`). **Always append new items and never delete existing entries.** Mark items as complete (e.g., by checking them off) when they are done. Then, re-sort the list by priority.

3. **Update MEMORY.txt:**  
   Add any long-term details that need to be remembered using structured data. Redact any sensitive or secret information.
   MEMORY.txt can grow to a max size of 8 MB, so you should feel free to do memory dumps of your thoughts (stream of consciousness) as we have plenty of memory.

4. **Update CONTEXT.txt:**  
   Write a distilled, concise version of the conversation's context using structured data. **Each line should include a timestamp, indicate whether the line is from the user or the model, and contain a brief summary of what was said.** Make sure to redact all secrets.

5. **Update ROADMAP.txt:**  
   If the project plans for the MVP change during the interaction, update this file accordingly.

6. **Use TMP.txt:**  
   Use TMP.txt to store any code during refactoring or restructuring, ensuring that no code is accidentally omitted or dropped.

7. **Stage all changes:**  
   Run the command: `git add .`

8. **Commit the changes:**  
   Run the command:  
   `git commit -m "refactor(all): ðŸ¤–ðŸ’« Automated AI magic at work"`
</ai_instruction> 