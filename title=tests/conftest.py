import pytest
import os
import respx
import httpx
import logging

# This fixture automatically changes the working directory for each test.
# Any output files (e.g. .wav files) generated by the tested code using relative paths
# will be created in a temporary directory instead of in the project root.
@pytest.fixture(autouse=True)
def change_to_temp_dir(tmp_path, monkeypatch):
    # Optionally, you can create a subdirectory (e.g., "generated_audio") inside tmp_path:
    generated_dir = tmp_path / "generated_audio"
    generated_dir.mkdir()
    monkeypatch.chdir(generated_dir)
    # Debug: print the current working directory (remove or comment in production)
    print("Current working directory changed to:", os.getcwd())

@pytest.fixture(autouse=True)
def quiet_httpx_logs():
    """
    Lower the logging level for httpx and its underlying httpcore logger to suppress INFO-level logs.
    """
    logging.getLogger("httpx").setLevel(logging.WARNING)
    logging.getLogger("httpcore").setLevel(logging.WARNING)

def mock_http_calls(request):
    # Example: Default mock for OpenRouter API endpoint with proper structure.
    respx_mock.post("https://openrouter.ai/api/v1/completions").mock(
        return_value=httpx.Response(
            200,
            json={
                "id": "dummy_id",
                "object": "text_completion",
                "created": 1234567890,
                "model": "openai/gpt-3.5-turbo",
                "choices": [
                    {
                        "text": "Dummy response",
                        "index": 0,
                        "logprobs": None,
                        "finish_reason": "stop"
                    }
                ],
                "usage": {}
            }
        )
    ) 